import type { Order } from '@/stores/orders'

export interface EmailTemplate {
  subject: string
  html: string
  text: string
}

export class EmailService {
  private static instance: EmailService
  private apiUrl = import.meta.env.VITE_BACKEND_URL || 'http://localhost:3000'

  static getInstance(): EmailService {
    if (!EmailService.instance) {
      EmailService.instance = new EmailService()
    }
    return EmailService.instance
  }

  async sendOrderConfirmation(order: Order): Promise<void> {
    try {
      const template = this.generateOrderConfirmationTemplate(order)

      // In a real application, this would call your backend email service
      // For now, we'll just log the email content and simulate sending
      
      
      
      

      // Simulate API call to backend email service
      const response = await fetch(`${this.apiUrl}/api/orders/send-email`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          to: order.customer_email,
          subject: template.subject,
          html: template.html,
          text: template.text,
          order_id: order.id
        })
      })

      if (!response.ok) {
        throw new Error(`Email service responded with status: ${response.status}`)
      }

      
    } catch (error) {
      console.error('‚ùå Failed to send order confirmation email:', error)
      // In a real app, you might want to queue the email for retry
      // or log this to an error tracking service
    }
  }

  private generateOrderConfirmationTemplate(order: Order): EmailTemplate {
    const subject = `–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ${order.order_number} - PWA Shop`

    const deliveryInfo = order.delivery_method === 'delivery'
      ? `–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞ –∞–¥—Ä–µ—Å–æ—é: ${order.delivery_address}`
      : `–°–∞–º–æ–≤–∏–≤—ñ–∑ –∑ –º–∞–≥–∞–∑–∏–Ω—É: ${order.pickup_branch?.name || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}`

    const itemsList = order.items.map(item =>
      `‚Ä¢ ${item.name} - ${item.quantity} —à—Ç. √ó ${item.price.toFixed(2)} UAH = ${(item.quantity * item.price).toFixed(2)} UAH`
    ).join('\n')

    const estimatedTime = order.estimated_delivery
      ? new Date(order.estimated_delivery).toLocaleString('uk-UA')
      : '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'

    const text = `
–í—ñ—Ç–∞—î–º–æ, ${order.customer_name}!

–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ${order.order_number} —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ.

–î–ï–¢–ê–õ–Ü –ó–ê–ú–û–í–õ–ï–ù–ù–Ø:
${itemsList}

–ü–Ü–î–°–£–ú–û–ö:
–°—É–º–∞ —Ç–æ–≤–∞—Ä—ñ–≤: ${order.subtotal.toFixed(2)} UAH
–î–æ—Å—Ç–∞–≤–∫–∞: ${order.delivery_fee.toFixed(2)} UAH
–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${order.total.toFixed(2)} UAH

–î–û–°–¢–ê–í–ö–ê:
${deliveryInfo}
–û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å: ${estimatedTime}

–û–ü–õ–ê–¢–ê:
${order.payment_method === 'cash_on_delivery' ? '–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ' : order.payment_method}

${order.notes ? `–ö–û–ú–ï–ù–¢–ê–†:\n${order.notes}\n` : ''}

–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.

–ó –ø–æ–≤–∞–≥–æ—é,
–ö–æ–º–∞–Ω–¥–∞ PWA Shop

–ö–æ–Ω—Ç–∞–∫—Ç–∏:
üìû +38 (044) 123-45-67
‚úâÔ∏è support@shop.com.ua
üåê https://shop.com.ua
    `.trim()

    const html = `
<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${subject}</title>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #2563eb; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
        .content { background: #f9fafb; padding: 20px; border: 1px solid #e5e7eb; }
        .order-details { background: white; padding: 15px; border-radius: 6px; margin: 15px 0; }
        .items-list { background: #f3f4f6; padding: 15px; border-radius: 6px; margin: 10px 0; }
        .total { background: #dbeafe; padding: 15px; border-radius: 6px; font-weight: bold; }
        .footer { background: #374151; color: white; padding: 20px; text-align: center; border-radius: 0 0 8px 8px; }
        .status-badge { background: #fef3c7; color: #92400e; padding: 4px 12px; border-radius: 20px; font-size: 12px; font-weight: bold; }
    </style>
</head>
<body>
    <div class="header">
        <h1>üõí PWA Shop</h1>
        <p>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</p>
    </div>

    <div class="content">
        <h2>–í—ñ—Ç–∞—î–º–æ, ${order.customer_name}!</h2>
        <p>–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è <strong>‚Ññ${order.order_number}</strong> —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ.</p>
        <span class="status-badge">–°—Ç–∞—Ç—É—Å: ${order.status === 'pending' ? '–û–±—Ä–æ–±–ª—è—î—Ç—å—Å—è' : order.status}</span>

        <div class="order-details">
            <h3>üì¶ –î–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</h3>
            <div class="items-list">
                ${order.items.map(item => `
                    <div style="display: flex; justify-content: space-between; margin-bottom: 8px;">
                        <span>${item.name} √ó ${item.quantity}</span>
                        <span>${(item.quantity * item.price).toFixed(2)} UAH</span>
                    </div>
                `).join('')}
            </div>

            <div class="total">
                <div style="display: flex; justify-content: space-between; margin-bottom: 5px;">
                    <span>–°—É–º–∞ —Ç–æ–≤–∞—Ä—ñ–≤:</span>
                    <span>${order.subtotal.toFixed(2)} UAH</span>
                </div>
                <div style="display: flex; justify-content: space-between; margin-bottom: 5px;">
                    <span>–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                    <span>${order.delivery_fee.toFixed(2)} UAH</span>
                </div>
                <hr style="margin: 10px 0;">
                <div style="display: flex; justify-content: space-between; font-size: 18px;">
                    <span>–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞:</span>
                    <span>${order.total.toFixed(2)} UAH</span>
                </div>
            </div>
        </div>

        <div class="order-details">
            <h3>${order.delivery_method === 'delivery' ? 'üöö –î–æ—Å—Ç–∞–≤–∫–∞' : 'üè™ –°–∞–º–æ–≤–∏–≤—ñ–∑'}:</h3>
            <p>${deliveryInfo}</p>
            <p><strong>–û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å:</strong> ${estimatedTime}</p>
        </div>

        <div class="order-details">
            <h3>üí≥ –û–ø–ª–∞—Ç–∞:</h3>
            <p>${order.payment_method === 'cash_on_delivery' ? '–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ' : order.payment_method}</p>
        </div>

        ${order.notes ? `
        <div class="order-details">
            <h3>üìù –ö–æ–º–µ–Ω—Ç–∞—Ä:</h3>
            <p>${order.notes}</p>
        </div>
        ` : ''}

        <p><strong>–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.</strong></p>
    </div>

    <div class="footer">
        <p><strong>–ó –ø–æ–≤–∞–≥–æ—é, –∫–æ–º–∞–Ω–¥–∞ PWA Shop</strong></p>
        <p>üìû +38 (044) 123-45-67 | ‚úâÔ∏è support@shop.com.ua</p>
        <p>üåê <a href="https://shop.com.ua" style="color: #93c5fd;">shop.com.ua</a></p>
    </div>
</body>
</html>
    `.trim()

    return { subject, html, text }
  }

  async sendReviewRequest(order: Order): Promise<void> {
    try {
      const template = this.generateReviewRequestTemplate(order)

      
      
      

      const response = await fetch(`${this.apiUrl}/api/orders/send-review-email`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          to: order.customer_email,
          subject: template.subject,
          html: template.html,
          text: template.text,
          order_id: order.id
        })
      })

      if (!response.ok) {
        throw new Error(`Email service responded with status: ${response.status}`)
      }

      
    } catch (error) {
      console.error('‚ùå Failed to send review request email:', error)
    }
  }

  private generateReviewRequestTemplate(order: Order): EmailTemplate {
    const subject = `–Ø–∫ –≤–∞–º –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è? –ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –≤—Ä–∞–∂–µ–Ω–Ω—è–º–∏! üåü`
    const reviewUrl = `${window.location.origin}/review-order/${order.id}`

    const text = `
–í—ñ—Ç–∞—î–º–æ, ${order.customer_name}!

–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ${order.order_number}. –°–ø–æ–¥—ñ–≤–∞—î–º–æ—Å—è, –≤–∞–º —Å–ø–æ–¥–æ–±–∞–ª–∏—Å—è –Ω–∞—à—ñ —Ç–æ–≤–∞—Ä–∏!

–í–∞—à—ñ –≤—ñ–¥–≥—É–∫–∏ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å –Ω–∞–º –ø–æ–∫—Ä–∞—â—É–≤–∞—Ç–∏—Å—è —ñ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å —ñ–Ω—à–∏–º –ø–æ–∫—É–ø—Ü—è–º —Ä–æ–±–∏—Ç–∏ –∫—Ä–∞—â–∏–π –≤–∏–±—ñ—Ä.

–¢–û–í–ê–†–ò –ó –í–ê–®–û–ì–û –ó–ê–ú–û–í–õ–ï–ù–ù–Ø:
${order.items.map(item => `‚Ä¢ ${item.name}`).join('\n')}

–ë—É–¥—å –ª–∞—Å–∫–∞, –ø—Ä–∏–¥—ñ–ª—ñ—Ç—å –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω –¥–ª—è –æ—Ü—ñ–Ω–∫–∏ –≤–∞—à–æ—ó –ø–æ–∫—É–ø–∫–∏:
${reviewUrl}

üéÅ –ë–û–ù–£–° –ó–ê –í–Ü–î–ì–£–ö!
–ó–∞–ª–∏—à—Ç–µ –≤—ñ–¥–≥—É–∫ —ñ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –∑–Ω–∏–∂–∫—É 10% –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!

–¶–µ –∑–∞–π–º–µ –ª–∏—à–µ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω, –∞ –≤–∞—à—ñ —á–µ—Å–Ω—ñ –≤—ñ–¥–≥—É–∫–∏ –¥—É–∂–µ —Ü—ñ–Ω–Ω—ñ –¥–ª—è –Ω–∞—Å.

–ó –ø–æ–≤–∞–≥–æ—é,
–ö–æ–º–∞–Ω–¥–∞ PWA Shop

–ö–æ–Ω—Ç–∞–∫—Ç–∏:
üìû +38 (044) 123-45-67
‚úâÔ∏è support@shop.com.ua
üåê https://shop.com.ua
    `.trim()

    const html = `
<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${subject}</title>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px 20px; text-align: center; border-radius: 8px 8px 0 0; }
        .content { background: #f9fafb; padding: 30px 20px; border: 1px solid #e5e7eb; }
        .products { background: white; padding: 20px; border-radius: 6px; margin: 20px 0; border-left: 4px solid #667eea; }
        .cta-button { display: inline-block; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 15px 30px; text-decoration: none; border-radius: 25px; font-weight: bold; margin: 20px 0; }
        .bonus { background: #fef3c7; border: 2px solid #f59e0b; padding: 20px; border-radius: 8px; margin: 20px 0; text-align: center; }
        .footer { background: #374151; color: white; padding: 20px; text-align: center; border-radius: 0 0 8px 8px; }
        .stars { font-size: 30px; margin: 15px 0; }
    </style>
</head>
<body>
    <div class="header">
        <div class="stars">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</div>
        <h1>–Ø–∫ –≤–∞–º –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?</h1>
        <p>–í–∞—à—ñ –≤—ñ–¥–≥—É–∫–∏ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å –Ω–∞–º –ø–æ–∫—Ä–∞—â—É–≤–∞—Ç–∏—Å—è!</p>
    </div>

    <div class="content">
        <h2>–í—ñ—Ç–∞—î–º–æ, ${order.customer_name}!</h2>
        <p>–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ<strong>${order.order_number}</strong> –≤—ñ–¥ ${new Date(order.created_at).toLocaleDateString('uk-UA')}. –°–ø–æ–¥—ñ–≤–∞—î–º–æ—Å—è, –≤–∞–º —Å–ø–æ–¥–æ–±–∞–ª–∏—Å—è –Ω–∞—à—ñ —Ç–æ–≤–∞—Ä–∏!</p>

        <p>–í–∞—à—ñ —á–µ—Å–Ω—ñ –≤—ñ–¥–≥—É–∫–∏ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å –Ω–∞–º –ø–æ–∫—Ä–∞—â—É–≤–∞—Ç–∏ –Ω–∞—à—ñ —Ç–æ–≤–∞—Ä–∏ —Ç–∞ —Å–µ—Ä–≤—ñ—Å, –∞ —Ç–∞–∫–æ–∂ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å —ñ–Ω—à–∏–º –ø–æ–∫—É–ø—Ü—è–º —Ä–æ–±–∏—Ç–∏ –∫—Ä–∞—â–∏–π –≤–∏–±—ñ—Ä.</p>

        <div class="products">
            <h3>üõí –¢–æ–≤–∞—Ä–∏ –∑ –≤–∞—à–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</h3>
            <ul>
                ${order.items.map(item => `<li><strong>${item.name}</strong> - ${item.quantity} —à—Ç.</li>`).join('')}
            </ul>
            <p><strong>–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${order.total.toFixed(2)} UAH</strong></p>
        </div>

        <div style="text-align: center;">
            <p><strong>–û—Ü—ñ–Ω—ñ—Ç—å –≤–∞—à –¥–æ—Å–≤—ñ–¥ —Ç–∞ –¥–æ–ø–æ–º–æ–∂—ñ—Ç—å —ñ–Ω—à–∏–º –≤—ñ–¥–∫—Ä–∏—Ç–∏ —á—É–¥–æ–≤—ñ —Ç–æ–≤–∞—Ä–∏!</strong></p>
            <a href="${reviewUrl}" class="cta-button">–ù–∞–ø–∏—Å–∞—Ç–∏ –≤—ñ–¥–≥—É–∫</a>
        </div>

        <div class="bonus">
            <h3>üéÅ –ë–æ–Ω—É—Å –∑–∞ –≤—ñ–¥–≥—É–∫!</h3>
            <p>–ó–∞–ª–∏—à—Ç–µ –≤—ñ–¥–≥—É–∫ —ñ –æ—Ç—Ä–∏–º–∞–π—Ç–µ <strong>–∑–Ω–∏–∂–∫—É 10%</strong> –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!</p>
            <p style="font-size: 18px; font-weight: bold; color: #f59e0b;">–ü—Ä–æ–º–æ–∫–æ–¥: REVIEW10</p>
        </div>

        <p style="color: #666; font-size: 14px;">
            –¶–µ –∑–∞–π–º–µ –ª–∏—à–µ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω. –í–∞—à –≤—ñ–¥–≥—É–∫ –±—É–¥–µ –≤–∏–¥–∏–º–∏–π —ñ–Ω—à–∏–º –ø–æ–∫—É–ø—Ü—è–º –ø—ñ—Å–ª—è –º–æ–¥–µ—Ä–∞—Ü—ñ—ó.
        </p>
    </div>

    <div class="footer">
        <p><strong>–î—è–∫—É—î–º–æ, —â–æ –æ–±–∏—Ä–∞—î—Ç–µ –Ω–∞—Å!</strong></p>
        <p>üìû +38 (044) 123-45-67 | ‚úâÔ∏è support@shop.com.ua</p>
        <p>üåê <a href="https://shop.com.ua" style="color: #93c5fd;">shop.com.ua</a></p>
    </div>
</body>
</html>
    `.trim()

    return { subject, html, text }
  }

  async scheduleReviewRequest(order: Order, delayHours = 24): Promise<void> {
    try {
      const response = await fetch(`${this.apiUrl}/api/orders/schedule-review`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          order_id: order.id,
          customer_email: order.customer_email,
          delayHours
        })
      })

      if (!response.ok) {
        throw new Error(`Failed to schedule review request: ${response.status}`)
      }

      
    } catch (error) {
      console.error('‚ùå Failed to schedule review request:', error)
    }
  }
}

export const emailService = EmailService.getInstance()
